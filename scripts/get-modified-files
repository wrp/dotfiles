#!/bin/sh
# Get a list of modified files.  First argument specifies a branch to
# compare to (defaulting to current) or an integer.  If it is an integer, it
# is the amount of git history to explore in the current branch.

TOP=$(git rev-parse --show-toplevel)
: ${GIT_DIR=$(git rev-parse --git-dir)}

if test $# = 0 || test "$1" -gt 0 2> /dev/null; then
	# First arg is an integer.
	for (( i = 0; i < ${1-1}; i++ )); do
		git diff-tree --no-commit-id --name-only -r HEAD~${i-0}
	done
else
	branch=${1-$(git rev-parse --abbrev-ref HEAD)} || exit

	if test -d "$GIT_DIR"/rebase-merge; then
		# rebase in progress.  Only report files with merge conflict
		git diff --name-only --diff-filter=U
	else
		git diff --name-only "${branch}" --
	fi

fi \
| awk '!a[$0]++{print c, $0}' OFS=/ c=$TOP
