#!/bin/sh
# Get a list of modified files.  First argument specifies a branch to
# compare to, defaulting to current.  If it is an integer, it is the
# amount of git history to explore.

test -n "$TOP" && cd $(git exec pwd)
arg_set=${1}
branch=${1-$(git rev-parse --abbrev-ref HEAD)}
depth=${1-1}
test "$depth" -gt 0 2> /dev/null || depth=1

if test "$branch" -gt 0 2> /dev/null || ! git diff --name-only "${branch}" -- | grep .; then
	if ! git diff-files --name-only | grep . || test -n "$arg_set"; then
		while test ${i-0} -lt $depth; do
			git diff-tree --no-commit-id --name-only -r HEAD~${i-0}
			: $(( i += 1 ))
		done
	fi
fi \
| awk '!a[$0]++{print c, $0}' OFS=/ c=$(git exec pwd)
