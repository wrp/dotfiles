#!/bin/sh

# Attach/switch to the pane running the pid given as $1.
# If no argument is given and stdin is not a tty, read anything that looks like
# a pid and present it to the user via select

die() { echo "$@" >&2; exit 1; }
nl='
'

die "This script is broken on macos, as it is no longer possible to
get environment envariables from another process."

# reading from a pipe, outputting to tty, no argument given.  Try
# to scrape pids from stdin.
if test $# = 0 && test -t 1 && ! test -t 0; then
	trap 'rm -f $TMP' 0
	TMP=$(mktemp)
	IFS="$nl"
	grep -woE '[0-9]{5,}' |
		grep -v ^$PPID\$ | # Skip the shell used to invoke this script
		sort -u | xargs get-environ TMUX_PANE  > $TMP

	test -s $TMP || die "${ERRMSG-No processes from which to select}"
	if test "$(wc -l < $TMP)" = 1; then
		response=1
	else
		PS3="${PROMPT-Select process to jump to}: "
		nl < $TMP
		test -z "$response" && read -p "$PS3" -t 5 response < /dev/tty
	fi
	if test -n "$response"; then
		pid=$( awk "NR == ${response}{print \$1}"  $TMP )
		echo Jumping to pid $pid
		set -- $pid
	else
		die timeout
	fi
fi

TPANE=$(get-environ TMUX_PANE ${1?No pid given})
test "${TPANE#%}" -ge 0 2> /dev/null && {
	if test -n "$TMUX_PANE"; then # We are running in tmux
		tmux switch-client -t $TPANE
		tmux select-window -t $TPANE
	else
		tmux attach-session -t $TPANE
	fi
}
