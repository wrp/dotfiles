#!/bin/sh

# Set t to a comma separated list of trailers to be displayed in the
# log output The idea here is that you can specify trailers with 'git
# config log.default-trailers' (a comma-separated list of trailer
# keys) or override with t at the command line.  eg, set 'git config
# diff.default-trailers ticket' to show the ticket in the log, or use
# 't=ticket,style g l1' to show both the ticket and the style trailer
# in the log, or 't= g l1' to show none.

# Any trailer keys listed in commit.required-trailers are also
# listed if t is unspecified.

cd ${GIT_PREFIX:-.} || exit

oid_width=8

trailers=${t-$( git config core.default-trailers | tr \\n ,;
	git config core.required-trailers; )}
trailers=${trailers#,}
width=${w-$(git config core.default-trailer-width || echo 11)}
trailer_fmt=$(printf '%s' "${trailers}" |
	sed -E "s/([^,]*)(\$|,)/ [%<(${width})%(trailers:key=\1,separator=%x2C,valueonly)]/g"
)

author_width=${GITLOG_AUTHOR_WIDTH:-$( \
	git config log.author-width 2> /dev/null || echo 12
)}

if test "${GIT_PAGER%% *}" = less; then
	# Check if this version of less supports --header
	# Grrr.  less does not return a reasonable status for a bad argument
	k=$(echo foo | command less --header 1 2> /dev/null)
	if test "$k" = foo; then
		LESS="$LESS --header 1"
		export LESS
	fi
fi

if test -n "$trailers"; then
	header=$(
		printf "%$((oid_width+1))s%-$((author_width+2))s" ' ' trailers:
		echo "$trailers" | tr , '\n' | cut -b 1-$((width + 2)) | while read t; do
			printf "%-$((width + 2))s " "$t";
		done
	)
	GIT_PAGER="sh -c 'printf \"%s\\\n\" \"$header\"; cat -u' |
		${GIT_PAGER:-more}"
fi

git log \
	--date=format:"" \
	--abbrev=${oid_width} \
	--format=tformat:"$(printf '%s' "$(:
		)%C(green)%h$(:
		)%C(yellow)% ad$(:
		)%C(red)%<(${author_width},trunc)% an %Creset${trailer_fmt}$(:
		)%<($(($(tput cols) / 3)),trunc)% s$( :
		)%Cblue% D$(:
		)%Creset" | sed -E 's/  +//g' )" "$@"
