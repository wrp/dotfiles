#!/bin/sh

# Print log in brief format (one line per commit)

# You may set t to a comma separated list of trailers to be displayed in the
# log output, and set w to an integer value giving the width of the field in
# which the trailer is displayed. The idea here is that you can specify trailers with 'git
# config --add log.default-trailer' or override with t at the command
# line.  eg, set 'git config --add log.default-trailers ticket' to
# show the ticket in the log, or use 't=ticket,style g l1' to show
# both the ticket and the style trailer in the log, or 't= g l1' to
# show no trailers.

# Any trailer keys listed in commit.required-trailers are also
# listed if t is unspecified.

initialize() {
	cd ${GIT_PREFIX:-.} || exit

	local _cfg_author_width _cfg_trailer_width

	oid_width=8  # display length of commit ids

	trailers=${t-"$( {
		git config --get-all log.default-trailer
		git config --get-all commit.required-trailer
		} | tr \\n , )"}
	_cfg_trailer_width="$(git config log.trailer-width)"
	trailer_width=${w-${_cfg_trailer_width:-11}}
	trailer_fmt=$(printf '%s' "${trailers}" |
		sed -E "s/([^,]*)(\$|,)/ [%<(${trailer_width})%(trailers:key=\1,separator=%x2C,valueonly)]/g"
	)
	_cfg_author_width="$(git config log.author-width)"
	author_width=${GITLOG_AUTHOR_WIDTH:-${_cfg_author_width:-12}}
}
initialize

use_color() {
	green="%C(green)"
	yellow="%C(yellow)"
	red="%C(red)"
	blue="%C(blue)"
	reset="%C(reset)"
}

if test "${GIT_PAGER%% *}" = less; then
	use_color

	# Check if this version of less supports --header
	# Grrr.  less does not return a reasonable status for a bad argument
	if test "$(echo foo | command less --header 1 2> /dev/null)" = foo; then
		LESS="$LESS --header 1,$((oid_width+1)) --no-number-headers"
		export LESS
	fi
else
	truncate="%<($(($(tput cols) / 3)),trunc)"
fi

if test -n "$trailers"; then
	header=$(
		printf "%$((oid_width+1))s%-$((author_width+2))s" ' ' trailers:
		echo "$trailers" | tr , '\n' | cut -b 1-$((trailer_width + 2)) | while read t; do
			printf "%-$((trailer_width + 2))s " "$t";
		done
	)
	GIT_PAGER="sh -c 'printf \"%s\\\n\" \"$header\"; cat -u' |
		${GIT_PAGER:-more}"
fi

# Warning: if git is too old and does not support the
# %trailer format, those directives will appear verbatim
# in the log.  Upgrade git.
git log \
	--date=format:"" \
	--abbrev=${oid_width} \
	--format=tformat:"$(printf '%s' "$(:
		)${green}%h$(:
		)${yellow}% ad$(:
		)${red}%<(${author_width},trunc)% an $(:
		)${reset}${trailer_fmt}$(:
		)${truncate}% s$( :
		)${blue}% D$(:
		)${reset}" | sed -E 's/  +//g' )" "$@"
