#!/bin/bash

# Display git branches and prompt for one to checkout.

# When given a non-integer first argument, filter the branches that match it as a regex.
# When given an integer, select it.

: ${COLUMNS:=$( tput cols 2> /dev/null )}
width=$(git for-each-ref --format='%(refname:short)' refs/heads \
	| awk 'length > max {max = length} END {print max + 2}')
format="%(align:$width)%(HEAD) %(refname:short)%(end)"
list=$(git branch --color --format="$format")
choice=${1}
trim() {
	if test "$choice" -gt 0 2> /dev/null; then
		list=$(echo "$list" | perl -nE "chop; say substr(\$_,0,${cols:-${COLUMNS-80}}) if \$. == ${choice}")
	else
		list=$(echo "$list" | perl -nE "chop; say substr(\$_,0,${cols:-${COLUMNS-80}}) if m/${choice-.}/")
	fi
}
while count=$(echo "$list" | wc -l | tr -d '[:space:]'); test "$count" -gt 1 2> /dev/null; do
	echo "$list" | nl -ba -s ' '
	printf "Select branch: " 
	read -r choice || echo
	trim
done

branch=$( echo "$list" | cut -b 3- | awk '{print $1}' )

test -n "$branch" && git checkout "$branch"
