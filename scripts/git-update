#!/bin/sh


branch=${1-$(git base-branch)} || exit
current=$(git rev-parse --abbrev-ref HEAD)
old=$(git show-ref refs/heads/$branch | cut -b 1-40)

if test "$current" = "$branch"; then
	git pull --quiet
else
	remote=$(git config branch.${branch}.remote)
	upstream=$(git rev-parse --abbrev-ref --symbolic-full-name ${branch}@{u})
	if test -z "$remote" || test -z "$upstream"; then
		echo "Can't find remote for $branch" >&2
		exit 1
	fi
	git fetch --quiet "$remote" || exit 1
	git update-ref refs/heads/$branch $upstream || exit 1
fi

new=$(git show-ref refs/heads/$branch | cut -b 1-40)
if test "${old}" = "${new}"; then
	echo No changes
else
	printf "Updated $branch %d commits\n" "$(git rev-list "$old".."$new" | wc -l)"
	printf "  from: %s\n" "$(git log -n 1 --format='%H    %s' "$old")"
	printf "    to: %s\n" "$(git log -n 1 --format='%H    %s' "$new")"
fi
