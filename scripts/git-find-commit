#!/bin/sh

# Find commits in the main branch (or the branch given in b) which
# contain the given blobs.  (Set b='--all' to search all commits)

init() {
	git-rev-parse HEAD > /dev/null || exit
	branch=${b-HEAD^0}
	fmt='%Y-%m-%d@%T'
	for x; do
		if test "$x" = -h; then
			sed -n '3,${ /^# /s///p; /^$/q; }' "$0"
			exit
		fi
	done
	first_pass=1
}

process_blob() {
	test "$1" -eq 00000000 2>/dev/null && return
	printf "searching for ${1:0:8}\r" >&2
	fmt="%<(10,trunc)%h ${1:0:8} %at %s"
	git log --format="$fmt" --find-object="$1" "$branch"
}


main() {
	init "$@"
	for x; do
		if test -f "$x"; then
			awk '/^index/{print substr($1,7,8)}' FS=. "$x"
		else
			echo "$x"
		fi
	done |
	awk '!a[$0]++' |
	while read b; do
		process_blob "$b"
	done \
	| sort -k 3,3n \
	| perl -MTime::Piece -lanE "\$v='$fmt';"'
		printf "%-10s %-8s %-19s %s\n", "commit", "blob",
			"timestamp", "summary" if $.==1;
		$F[2] =~ s/([0-9]{9,10})/gmtime($1)->strftime($v)/e;
		say substr join(" ", @F), 0, $ENV{"COLUMNS"} // 80;
	'
}

main "$@"
