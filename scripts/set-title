#!/bin/sh

# Set the title of the tmux or terminal window

# The expectation is that we're running in TMUX or docker.  For the moment,
# we can use terminal escape sequences from docker images I often
# run.  Cannot use escape sequences from Apple terminal directly,
# but I don't really care about that.  Abort early and call it a success
# if we aren't in one of the expected environments.
test -z "$TMUX$DOCKER" && exit

# If no argument is given, use the either the root of the git repo
# or the name of the branch that is currently checked out.
# If not in a git repo, use the output of pwd -P
test -z "$*" && {
	if test "$(pwd -P)" = "$HOME"; then
		d=${HOME_PANE_TITLE-~}
	elif branch_name=$(git rev-parse --abbrev-ref HEAD); then
		d="$(git rev-parse --show-toplevel)"
	else
		d="$(pwd -P | sed -e "s@$HOME@~@")"
	fi
	set -- "$(basename "$d")${branch_name+@}${branch_name:0:10}"
} 2> /dev/null

if test -n "$truncate_left"; then
	patt='.*\(.\{19\}\)'
	repl='<\1'
else
	patt='\(.\{19\}\).*'
	repl='\1>'
fi

title="${DOCKER+$DOCKER:}${VIRTUAL_ENV+!}$( echo "$*" | sed '/.\{20\}/s/^'$patt'$/'$repl/)"


# Instead of renaming the window,  we will change the title of the current pane and
# rely on the tmux configuration to set the string shown in the status bar via
# the automatic-rename-format
if test -n "$TMUX"; then
	if test -n "$FORCE"; then
		echo 'WARNING: window renamed.  Auto-rename is now disabled' >&2
		tmux rename-window -- "$title"
	else
		tmux select-pane -t ${TMUX_PANE} -T "$title"
	fi
else
	printf '\033k%s\033\' "$title"
fi
