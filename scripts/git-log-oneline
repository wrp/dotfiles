#!/bin/sh

# Print log in brief format (one line per commit)

# You may set t to a comma separated list of trailers to be displayed
# in the log output, and set w to an integer value giving the width
# of the field in which the trailer is displayed. The idea here is
# that you can specify trailers with 'git config --add log.default-trailer'
# or override with t at the command line.  eg, set 'git config --add
# log.default-trailers ticket' to show the ticket in the log, or use
# 't=ticket,style g l1' to show both the ticket and the style trailer
# in the log, or 't= g l1' to show no trailers.

# Any trailer keys listed in commit.required-trailers are also
# listed if t is unspecified.

initialize() {
	cd ${GIT_PREFIX:-.} || exit
	: ${GIT_PAGER=$PAGER}

	local _cfg_author_width _cfg_trailer_width

	# *_width is the number of characters used in the display
	oid_width=$(git config log.oid-width || echo 8)

	trailers=${t-"$( {
		git config --get-all log.default-trailer
		git config --get-all commit.required-trailer
		} | tr \\n , | sed -e 's/,$//')"}
	_cfg_trailer_width="$(git config log.trailer-width)"
	trailer_width=${w-${_cfg_trailer_width:-11}}

	trailer_fmt=$(build_trailer_fmt)

	_cfg_author_width="$(git config log.author-width)"
	author_width=${GITLOG_AUTHOR_WIDTH:-${_cfg_author_width:-12}}

	# Current versions of less with --header do not behave well with
	# -F, and I get a screen full of ~ when the input is short.  As
	# a workaround, just omit --headers if -n is specified.
	if test "$1" = -n; then
		NO_HEADERS=1
	fi
}

use_color() {
	green="%C(green)"
	yellow="%C(yellow)"
	red="%C(red)"
	blue="%C(blue)"
	reset="%C(reset)"
}

check_pager() {
	if test "${GIT_PAGER%% *}" = less; then
		if test "$(echo "$LESS" | tr -dc R)" = R ||
			echo "$GIT_PAGER" | grep -q RAW-CONTROL-CHARS
		then
			use_color
		fi

		if \
			test -z "$NO_HEADERS" &&
			# Check if this version of less supports --header
			# Grrr.  less does not return a reasonable status for a bad argument
			test "$(echo foo | command less --header 1 2> /dev/null)" = foo
		then
			LESS="$LESS --header 1,$((oid_width+1)) --no-number-headers"
			export LESS
		fi
	else
		truncate="%<($(($(tput cols) / 3)),trunc)"
	fi

	if test -n "$trailers"; then
		header=$(
			printf "%-$((oid_width+1))s%-$((author_width+1))s" oid author
			echo "$trailers" | tr , '\n' | cut -b 1-$((trailer_width + 2)) \
			| while read t; do
				printf "%-$((trailer_width + 2))s " "$t"
			done
			printf summary
		)
		GIT_PAGER="sh -c 'printf \"%s\\\n\" \"$header\"; cat -u' |
			${GIT_PAGER:-more}"
	fi
}

main() {
	initialize "$@"
	check_pager
	git log \
		--date=format:"" \
		--abbrev=${oid_width} \
		--format=tformat:"$(printf '%s' "$(:
			)${green}%h$(:
			)${yellow}% ad$(:
			)${red}%<(${author_width},trunc)% an$(:
			)${reset}${trailer_fmt}$(:
			)${truncate}% s$( :
			)${blue}% D$(:
			)${reset}" | sed -E 's/  +//g' )" "$@"
}

build_trailer_fmt() {
	awk 'BEGIN {split(ARGV[1], f, ","); split(ARGV[2], g, ",");
		for(i=1; i <= length(f); i++)
			printf(" [%%<(%s)%%(trailers:key=%s,separator=%%x2C,valueonly)]",
				g[i] ? g[i] : g[1], f[i])}' \
			"${trailers}" "${trailer_width}"


}

main "$@"
