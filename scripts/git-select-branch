#!/bin/sh

# Present a menu when invoked with no arguments,
# or select branch by number.  Write the branch
# name to stdout.  If the number cannot be converted
# to a branch (eg, an integer like 1024 when there are
# only 5 branches), just emit the number.  This is
# convenient for interactive use when numbers are
# not intended to be used as a branch.  (Note, currently
# the expected way to suppress substitutions is to
# run "command git ....")

git rev-parse > /dev/null || exit

if test -n "$1" && git rev-parse --verify "$1" > /dev/null 2>&1; then
	branch=$1
else
	branches=$(git show-ref --heads | sed -e 's@.*refs/heads/@@')
	if test $# = 0 && test -n "$branches"; then
		select branch in ${branches}; do break; done
	elif test "$1" -eq 0 2> /dev/null; then
		branch=$(git base-branch)
	elif test "$1" -gt 0 2> /dev/null; then
		branch=$(
			{
				git symbolic-ref -q HEAD > /dev/null ||
					printf 'HEAD\n'
				printf '%s' "$branches"
			} | tr ' ' '\n' | sed -n "${1}p"
		)
	fi
fi
if test -n "$branch"; then
	printf '%s' "$branch"
else
	printf '%s' "$1"
fi
