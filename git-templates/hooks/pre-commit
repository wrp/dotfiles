#!/bin/sh

valid_chars='+:a-zA-Z0-9_./-'  # Characters that are acceptable in path names
against=$(git rev-parse --verify HEAD 2>/dev/null || git hash-object -t tree /dev/null)

die() {
	printf 'Pre-commit hook is rejecting this commit: '
	if test -n "$*"; then printf '%s\n' "$@"; fi
	printf 'Use --no-verify (-n) to ignore\n'
	exit 1
} >&2

warn() { printf 'WARNING from pre-commit hook: %s\n' "$@"; } >&2

validate_pathnames() {
	# Reject names with non standard characters
	if invalid=$(git diff --cached --name-only --diff-filter=A -z $against |
		LC_ALL=C tr -d "\000${valid_chars}" | xxd | cut -d: -f 2- | tr -s ' ' | grep .)
	then
		die "Invalid characters in filename: $invalid"
	fi
}

indentation_is_okay() {
	# Sigh.  With core.whitespace set to 'indent-with-no-tab' and
	# apply.whitepace set to 'error', git diff-index does not treat
	# a leading tab follwed by space as an error.  So we need to
	# explicitly check for any spaces in the indentation.
	local tab=$(printf '\t')
	if \
		test $(git config core.whitespace) = indent-with-no-tab &&
		git diff --cached |
			grep -v -e '^+++' -e '^---' -e '^@@' -e '^diff' -e '^index' |
			grep -E "^[+]${tab}*[ ]"
	then
		reason='spaces in leading indentation'
		return 1
	fi
}

validate_whitespace() {
	if test -n "$IGNORE_WHITESPACE_ERRORS"; then
		return 0
	fi

	local reason='Whitespace errors reported by git-diff-index'
	if \
		! git diff-index --check --cached $against -- ||
		! indentation_is_okay
	then
		if git config apply.whitespace | grep -q error; then
			func=die
		else
			func=warn
		fi
		$func "$reason" \
			'To ignore, do one of:' \
			'  * set "git config apply.whitespace warn"' \
			'  * set IGNORE_WHITESPACE_ERRORS'
	fi
}

main() {
	validate_pathnames "$@"
	validate_whitespace "$@"
	local_hook="$(dirname $(dirname $0))/local-hooks/$(basename $0)"
	if test -x "$local_hook"; then
		"$local_hook" "$@" || die $local_hook failed
	fi
}

main "$@"
