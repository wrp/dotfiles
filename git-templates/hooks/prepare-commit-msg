#!/bin/sh

main() {
	# Only check if the message was given by -m or -F
	if test "$2" != message; then
		return 0
	fi
	# Do not check if this is from an existing commit (-c, -C, or --amend)
	if test -n "$3"; then
		return 0
	fi

	get_ticket || return 1
	if test -n "$ticket"; then
		git-interpret-trailers --in-place --if-exists addIfDifferent --trailer ticket="$ticket" "$1"
	fi
	local_hook="$(dirname $(dirname $0))/local-hooks/$(basename $0)"
	if test -x "$local_hook"; then
		"$local_hook" "$@" || die $local_hook failed
	fi
}

get_ticket() {
	test -n "$ticket" && return
	branch=$(git branch --show-current)
	if test -z "$branch"; then
		# Maybe we are rebasing; try to get the original branch name
		for i in rebase-merge rebase-apply; do
			p=$(git rev-parse --git-path $i)
			if test -d "$p"; then
				branch=$(sed -e 's@refs/heads/@@' "$p"/head-name)
				break;
			fi
		done
	fi
	ticket=$(
		# get-ticket-from-branch is expected to be a local
		# script that may not exist
		git config branch."$branch".ticket ||
		get-ticket-from-branch "$branch" 2> /dev/null
	)
	if test -z "$ticket" \
		&& test -z "$ALLOW_NO_TICKET" \
		&& ! test "$(git config core.require-ticket)" = false \
		&& ! test "$(git config branch.$branch.require-ticket)" = false \
	; then
		echo "WARNING: setting ticket to None"
		ticket=None
	fi >&2
}

main "$@"
