#!/bin/sh

# Create symbolic links in $HOME to all entries in this directory except
# those listed in denylist.  All links created in $HOME will have a .
# prepended if the name here does not contain a leading .

die() { test -n "$*" && echo "$*" >&2; exit 1; }
warn() { test -z "$NOWARN" && echo "$@" >&2; }

find_md5_executable() {
	for MD5 in md5sum md5; do $MD5 > /dev/null </dev/null 2>&1 && break; done
}

establish_context() {
	base=$(dirname $(realpath "$0"))
	cd "$HOME" || die
}

parse_arguments() {
	unset force abort
	while test $# -gt 0; do
	       case $1 in
	       -f)  force=1;;
	       *)   die unexpected argument: $1;;
	       esac
	       shift
	done
}

validate_md5_sums() {
	for file in $targets; do
		if test -f "$file" && test "$($MD5 < $HOME/$file)" != \
				"$($MD5 < "$base/$file")"; then
			warn "$file is different, set V=1 to see diff"
			test -n "$V" && diff -u "$HOME/$file" "$base/$file"
			abort=1
		fi
	done
	if test -n "$abort" && test -z "$force"; then
	       warn "-f to force overwrite"
	       exit 1;
	fi
}

init() {
	find_md5_executable
	establish_context
	parse_arguments "$@"
	targets=$(ls -a "$base" | awk 'NR==FNR {a[$0] = 1; next} ! ($0 in a)' $base/denylist -)
	validate_md5_sums
	test -n "$abort" && warn overwriting
	mkdir -p $HOME/.bash-history-dir
	mkdir -p $HOME/.config/git
	ln -fs ../../$base/.gitignore_global $HOME/.config/git/ignore || die
}

create_symlinks() {
	for file in $targets; do
		ln -sf "$base/$file" .${file#.} || die
	done
}

create_file() {
	if ! test -f "$1"; then
		cat > "$1"
	else
		die "$1 already exists"
	fi
}

setup_git() {
	for n in EMAIL UNAME; do
		eval v=\$$n;
		if test -z "$v"; then
			printf "$n not set in environment.  Enter value: "
			eval read $n
		fi
	done

	# Create files that should be local to this machine
	create_file "$HOME/.gitconfig-local" <<- EOF
	[user]
		email = ${EMAIL?}
		name = ${UNAME?}
	EOF
}

setup_local_files() {
	create_file "$HOME/.bash-local" <<- EOF
		EMAIL="$EMAIL"
		UNAME="$UNAME"
		export EMAIL UNAME
	EOF

	create_file "$HOME/CONFIG_SITE" <<- 'EOF'
		prefix=$HOME/$(uname -m)/$(uname -s)
		CFLAGS=-I${prefix}/include
		LDFLAGS=-L${prefix}/lib
	EOF
}

main() {
	init "$@"
	create_symlinks
	setup_git
	setup_local_files

	ln -s "$base/scripts" scripts
	mkdir $HOME/.git-template-links
	(cd $HOME/.git-template-links; ln -s $base/git-templates/hooks)
}

main "$@"
