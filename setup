#!/bin/sh

# Create symbolic links in $HOME

nl='
'
IFS=" $nl"

die() { test -n "$*" && echo "$*" >&2; exit 1; }
warn() { test -z "$NOWARN" && echo "$@" >&2; }

for MD5 in md5sum md5; do $MD5 > /dev/null </dev/null 2>&1 && break; done

base=$(dirname "$0")
test "$(pwd)" = "$HOME" || die "Must run from \$HOME ($HOME)"
cd $HOME

unset force abort
while test $# -gt 0; do
       case $1 in
       -f)  force=1;;
       *)   die unexpected argument: $1;;
       esac
       shift
done

# names is the list to be the target of symlinks
names=$(ls -a "$base" | while read f; do grep -q "^${f}$" $base/blacklist \
	|| echo $f; done)

for file in $names; do
	if test -f "$file" && test "$($MD5 < $HOME/$file)" != \
			"$($MD5 < "$base/$file")"; then
		warn "$file is different, set V=1 to see diff"
		test -n "$V" && diff -u $HOME/$file "$base/$file"
		abort=1
	fi
done

if test -n "$abort" && test -z "$force"; then
       warn "-f to force overwrite"
       exit 1;
fi

test -n "$abort" && warn overwriting

mkdir -p $HOME/.bash-history-dir
mkdir -p $HOME/.config/git
mkdir -p $HOME/.config/vim
ln -fs ../../$base/.gitignore_global $HOME/.config/git/ignore || die

for file in $names; do
	ln -sf "$base/$file" .${file#.} || die
done

for n in EMAIL UNAME; do
	eval v=\$$n;
	if test -z "$v"; then
		printf "$n not set in environment.  Enter value: "
		eval read $n
	fi
done

# Create files that should be local to this machine
create_file() { if ! test -f "$1"; then cat > "$1"; fi }
create_file "$HOME/.gitconfig-user" <<- EOF
[user]
	email = ${EMAIL?}
	name = ${UNAME?}
EOF

create_file "$HOME/.bash-local" <<- EOF
	EMAIL="$EMAIL"
	UNAME="$UNAME"
	export EMAIL UNAME
EOF

create_file "$HOME/CONFIG_SITE" <<- 'EOF'
	prefix=$HOME/$(uname -m)/$(uname -s)
	CFLAGS=-I${prefix}/include
	LDFLAGS=-L${prefix}/lib
EOF

ln -s "$base/scripts" scripts
