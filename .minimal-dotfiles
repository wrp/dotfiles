#!/bin/sh
# usage: @@name@@ [arg ...]
#
# Execute this file to load up the tmux paste buffer.
# unset TMUX if you really want to just execute it
# Pass args such as bashrc or bash_profile to load just one file.

# Use -h for help and a list of available files.

if test "$1" = -h; then
	sed -e 1d -e "s|@@name@@|$(basename $0)|" -e '/^#/!q' -e 's/# *//' $0
	echo "Available files:"
	sed -e '1,/UNI[Q]UE_STRING/d' -e '/^#[^#]/!d' -e 's/^# /    /' $0
	exit
fi

if test -n "$TMUX"; then
	if test "$#" -gt 0; then
		for x; do
			sed -n -E "/^# [.]?${x}$/,/^-* EOF -*/p" $0 \
			| if grep .; then
				echo "copied $x to clipboard" >&2
			else
				echo "No text copied to clipboard for $x!" >&2
			fi
		done
	else
		sed -e '1,/UNI[Q]UE_STRING/d' $0
	fi \
	| expand \
	| tmux loadb -
	exit
fi
## UNIQUE_STRING

# .bashrc
cat << '-------------- EOF --------------' >> $HOME/.bashrc
################################################################################
read_file() { for f; do test -f "$f" && . "$f"; done; }
read_file /etc/bashrc
unset PROMPT_COMMAND
unalias -a
trap 'history -a' DEBUG
export EVENT_NOKQUEUE=1
HISTTIMEFORMAT='%H:%M:%S '
HISTFILESIZE=9999999999
export LSCOLORS=fxfxcxdxbxegedabagacad
export LESS=FeRXSQ
export LC_TIME=C
set -o vi
PS1="\[$(tput rev)"'$( r=$(( $? != 0 )); tput setaf $((2 - r));
        tput setab $(( r * 7 ));
        )\]\D{%T}'"\[$( tput setaf 2)$(tput sgr0)\]"' $$ \h\$ '

c() { clear; }
g() { git "$@"; }
ta() { tmux attach; }
curl() { command curl -Ssf "$@"; }
epoch() { perl -pe 's/([0-9]{9,10})/sprintf "%s (%sUTC)", $1,
        scalar gmtime $1/ge' "$@"; }
trim() { perl -nE "chomp; say substr \$_, 0, ${COLUMNS-$(tput cols)} - 1" "$@"; }
vi() { vim "$@"; }
reset_auth_sock() {
	local c=$( tmux show-env SSH_AUTH_SOCK 2> /dev/null )
	if test -z "$c" || echo "$c" | grep -q '^SSH_AUTH_SOCK=[/a-zA-Z.0-9]*$'; then
		eval $c
	else
		echo "WARNING: invalid value in SSH_AUTH_SOCK" >&2
	fi
}
trap reset_auth_sock SIGWINCH
complete -r gsutil 2> /dev/null
complete -r gcloud 2> /dev/null
complete -r bq 2> /dev/null
read_file "$HOME"/.bash-local
-------------- EOF --------------

ln -s .bash_history $HOME/.bash-history


# .bash_profile
cat << '-------------- EOF --------------' > $HOME/.bash_profile
[[ "$-" =~ i ]] && test -f $HOME/.bashrc && . $HOME/.bashrc
-------------- EOF --------------


# .vimrc
cat << '-------------- EOF --------------' > $HOME/.vimrc
noremap v V
noremap V v
noremap ; :
noremap , ;
syntax on
set nowrapscan
let loaded_matchparen = 1
set path+=~
set includeexpr=substitute(v:fname,'$DAEMON_PATH/','','g')
set t_ti= t_te=  " Disable clear screen on exit
set novisualbell
set noerrorbells
set virtualedit=all
set wildmenu
set wildmode=longest,list,full
highlight Comment ctermfg=darkcyan
highlight String ctermfg=darkcyan
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
-------------- EOF --------------


# .inputrc
cat << '-------------- EOF --------------' > $HOME/.inputrc
set editing-mode vi
set keymap vi
-------------- EOF --------------

# .tmux.conf
cat << '-------------- EOF --------------' > $HOME/.tmux.conf
unbind C-b
set -g prefix C-k
bind C-k send-prefix
set -g window-status-current-style bg=yellow
set -g -a window-status-current-style fg=red
set -g window-status-current-format '#I:#W'
set -g status-left-length 25
set -g status-right '%H:%M %e-%b'
set-option -g update-environment "SSH_AUTH_SOCK"
set -g history-limit 25000
bind-key -n Left previous-window
bind-key -n Right next-window
bind-key ',' command-prompt "rename-window '%%'"
bind-key '$' command-prompt "rename-session '%%'"
set-hook -g client-attached 'run-shell "kill -s WINCH $(ps -ax | grep [b]ash)"'
-------------- EOF --------------


# .editrc
cat << '-------------- EOF --------------' > $HOME/.editrc
bind -v
-------------- EOF --------------


# .gitconfig
cat << EOF > $HOME/.gitconfig
[user]
        email = ${EMAIL}
        name = ${USER}
EOF
cat << '-------------- EOF --------------' >> $HOME/.gitconfig
[alias]
	ap = add --patch
	b = branch -vv
	cda = commit -a -m Documentation
	cfa = commit -a -m 'Trivial reformat'
	cp = cherry-pick -x
	cra = commit -a -m 'Trivial refactor'
	csa = commit -a -m'Sanity Check'
	cwa = commit -a -m 'Whitespace'
	ciam = commit -a -m
	ci = commit
	caa = !bash -c '"git commit --amend -a -m \"$(git log --format=format:%B -n 1)\" --cleanup=strip"'
	caan = !bash -c '"git commit --amend -an -m \"$(git log --format=format:%B -n 1)\" --cleanup=strip"'
	co = checkout
	dc = diff --cached
	d = diff
	dn = diff --numstat
	dw = diff --word-diff
	l = log --oneline --decorate --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Cblue%D%Creset %<(80,trunc)%s'
	l1 = log --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset'
	ld = log --format=format:'%Cgreen%h%C(yellow) %cr %Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset'
	lt  = log --format=format:'%<(80,trunc)%s %Cblue%D%Creset'
	l1a = log --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(80,trunc)%s %Cblue%d%Creset' --graph
	l1ah = log -n 10 --format=format:'%Cgreen%h%Cblue%d%Creset %<(80,trunc)%s' --graph
	la = log --oneline --graph --decorate --format=format:'%Cgreen%h%Cblue%d%Creset %<(80,trunc)%s'
	lh  = log -n 10 --decorate --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset' --graph
	l1h = log -n 10 --decorate --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset' --graph
	s = status -uno
	sp = stash pop
	ss = stash save
	exec = "!exec "
	ll = log --stat
[core]
	excludesfile = ~/.gitignore_global
	editor = vim
[push]
	default = current
[pager]
	status = true
[versionsort]
	prereleaseSuffix = .rc
[color "branch"]
	meta = red green bold
[color]
	branch = true
-------------- EOF --------------
