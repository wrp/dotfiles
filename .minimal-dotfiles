#!/bin/sh
# Execute this file to load up the tmux paste buffer
# unset TMUX if you really want to just execute it

if test -n "$TMUX"; then
	sed -e '1,/UNI[Q]UE_STRING/d' $0 \
	| if test "$1"; then
		sed -n -E "/^# [.]?$1/,/^-------------- EOF --------------/p"
	else
		cat
	fi \
	| expand \
	| tmux loadb -
	exit
fi
# UNIQUE_STRING

# .bashrc
cat << '-------------- EOF --------------' > $HOME/.bashrc
read_file() { for f; do test -f "$f" && . "$f"; done; }
read_file /etc/bashrc
unalias -a
trap 'history -a' DEBUG
export EVENT_NOKQUEUE=1
HISTTIMEFORMAT='%H:%M:%S '
HISTFILESIZE=9999999999
export LSCOLORS=fxfxcxdxbxegedabagacad
export LESS=FeRXSQ
export LC_TIME=C
set -o vi
PS1="\[$(tput rev)"'$( r=$(( $? != 0 )); tput setaf $((2 - r));
        tput setab $(( r * 7 ));
        )\]$(date "+%H:%M:%S") $$ \h\$\['"$( tput setaf 2)$(tput sgr0)\] "

PROMPT_COMMAND='printf "\033k%s\033\\" "${HOSTNAME#*-}"'
c() { clear; }
g() { git "$@"; }
ta() { tmux attach; }
curl() { command curl -Ssf "$@"; }
epoch() { perl -pe 's/([0-9]{9,10})/sprintf "%s (%sUTC)", $1,
        scalar gmtime $1/ge' "$@"; }
test -z "$COLUMNS" && export COLUMNS=$( tput cols 2> /dev/null )
trim() { perl -nE "chomp; say substr \$_, 0, ${COLUMNS-80} - 1"; }
vi() { vim "$@"; }

# complete -r gsutil
# complete -r gcloud
# complete -r bq

# LSCOLORS is for OSX, LS_COLORS for linux
LS_COLORS=$( cat << EOF | tr \\n :
rs=0:di=02;33:ln=01;36:mh=00:pi=40;33:so=01;35
do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43
ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31
*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31
*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31
*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31
*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31
*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31
*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35
*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35
*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35
*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35
*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35
*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35
*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35
*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35
*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36
*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36
*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36
EOF
)
read_file "$HOME"/.bash-local
-------------- EOF --------------

ln -s .bash_history $HOME/.bash-history


# .bash_profile
cat << '-------------- EOF --------------' > $HOME/.bash_profile
[[ "$-" =~ i ]] && test -f $HOME/.bashrc && . $HOME/.bashrc
-------------- EOF --------------


# .vimrc
cat << '-------------- EOF --------------' > $HOME/.vimrc
nore v V
nore V v
nore ; :
nore , ;
set nowrapscan
let loaded_matchparen = 1
set path+=~
set includeexpr=substitute(v:fname,'$DAEMON_PATH/','','g')
set t_ti= t_te=  " Disable clear screen on exit
set novb
set noeb
set wildmenu
set wildmode=longest,list,full
highlight Comment ctermfg=darkcyan
highlight String ctermfg=darkcyan
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
-------------- EOF --------------


# .inputrc
cat << '-------------- EOF --------------' > $HOME/.inputrc
set editing-mode vi
set keymap vi
-------------- EOF --------------

# .tmux.conf
cat << 'EOF' > $HOME/.tmux.conf
unbind C-b
set -g prefix C-k
bind C-k send-prefix
set -g window-status-current-bg yellow
set -g window-status-current-fg red
set -g window-status-current-format '#I:#W'
set -g status-left-length 25
set status-right '%H:%M %e-%b'
set-option -g update-environment "SSH_AUTH_SOCK"
set history-limit 25000
bind-key -n Left previous-window
bind-key -n Right next-window
bind-key ',' command-prompt "rename-window '%%'"
bind-key '$' command-prompt "rename-session '%%'"
EOF


# .editrc
cat << '-------------- EOF --------------' > $HOME/.editrc
bind -v
-------------- EOF --------------


# .gitconfig
cat << '-------------- EOF --------------' > $HOME/.gitconfig
[alias]
	ap = add --patch
	b = branch -vv
	cda = commit -a -m Documentation
	cfa = commit -a -m 'Trivial reformat'
	cp = cherry-pick -x
	cra = commit -a -m 'Trivial refactor'
	csa = commit -a -m'Sanity Check'
	cwa = commit -a -m 'Whitespace'
	ciam = commit -a -m
	ci = commit
	caa = !bash -c '"git commit --amend -a -m \"$(git log --format=format:%B -n 1)\" --cleanup=strip"'
	caan = !bash -c '"git commit --amend -an -m \"$(git log --format=format:%B -n 1)\" --cleanup=strip"'
	co = checkout
	dc = diff --cached
	d = diff
	dn = diff --numstat
	dw = diff --word-diff
	l = log --oneline --decorate --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Cblue%D%Creset %<(80,trunc)%s'
	l1 = log --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset'
	ld = log --format=format:'%Cgreen%h%C(yellow) %cr %Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset'
	lt  = log --format=format:'%<(80,trunc)%s %Cblue%D%Creset'
	l1a = log --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(80,trunc)%s %Cblue%d%Creset' --graph
	l1ah = log -n 10 --format=format:'%Cgreen%h%Cblue%d%Creset %<(80,trunc)%s' --graph
	la = log --oneline --graph --decorate --format=format:'%Cgreen%h%Cblue%d%Creset %<(80,trunc)%s'
	lh  = log -n 10 --decorate --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset' --graph
	l1h = log -n 10 --decorate --format=format:'%Cgreen%h%Cred %<(10,trunc)%an%Creset %<(60,trunc)%s %Cblue%D%Creset' --graph
	s = status -uno
	sp = stash pop
	ss = stash save
	exec = "!exec "
	ll = log --stat
[core]
	excludesfile = ~/.gitignore_global
	editor = vim
[push]
	default = current
[pager]
	status = true
[versionsort]
	prereleaseSuffix = .rc

[color "branch"]
	meta = red green bold
[color]
	branch = true
-------------- EOF --------------
