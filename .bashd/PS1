
__RED=$(printf '\x01'; tput setaf 1; printf '\x02')
__GREEN=$(printf '\x01'; tput setaf 2; printf '\x02')
__YELLOW=$(printf '\x01'; tput setaf 3; printf '\x02')
__BLUE=$(printf '\x01'; tput setaf 4; printf '\x02')
__MAGENTA=$(printf '\x01'; tput setaf 5; printf '\x02')
__CYAN=$(printf '\x01'; tput setaf 6; printf '\x02')

__battery_check='$(
	_battery_remaining=$( battery 2> /dev/null | tr -d % )
	if test -n "$_battery_remaining"; then
		if test "$_battery_remaining" -gt 30; then
			printf "%s" "$__GREEN"
		elif test "$_battery_remaining" -gt 15; then
			printf "%s" "$__YELLOW";
		else
			printf "%s" "$__RED";
		fi 2> /dev/null
		printf "%s" "[${_battery_remaining}%]"
	fi
)'

check_variable() {
	name=$1
	PS1+='$(
		if test -n "$(sh -c '"'"'echo ${'$name'}'"'"')"; then
			printf "$__RED%s:" "'$name'"
		fi
	)'
}

# Add command to PS1 to set color based on $?
set_color() { PS1='$( { test $? -ne 0 && printf "%s" "$__RED" || printf "%s" "$__CYAN"; } )'; }
set_prompt() {
	local trailer="$( printf "$__GREEN%05d" "$$" )\$ "
	trap 'PS1+="$trailer"' RETURN
	set_color
	PS1+="${PS1_PREFIX}"
	PS1+='\D{%T}'  # %T is passed to strftime for time
	if test -z "$TMUX"; then
		PS1+="${__RED} NO TMUX "
	fi
	if test "$(tput cols)" -le 80; then
		PS1+='|'
		return;
	fi

	# Insert battery percentage
	if battery > /dev/null 2>&1; then
		PS1+="$__battery_check"
	fi
	PS1+='$__MAGENTA'

	# project
	PS1+='$(printf '%s' "${PROJECT:+(}${PROJECT%-[0-9]*}${PROJECT:+)}")'

	# directory and git branch
	PS1+='$(
		if test "${COLUMNS:-0}" -gt 100; then printf "[%s%s%s]" \
			"$PS1_LEADER${PS1_LEADER:+:}" \
			"${PWD##*/}"\
			"$( git rev-parse --abbrev-ref HEAD 2> /dev/null \
				| sed -E -e "s/^/@/" -e "s@^:heads/@:@" )"
		else printf :
		fi | tr \  .
	)'

	# environment warnings
	for name in ALLOW_NO_TICKET; do
		check_variable $name
	done

}
set_prompt
unset set_prompt
unset set_color
unset __battery_check
