
__RED=$(printf '\x01'; tput setaf 1; printf '\x02')
__GREEN=$(printf '\x01'; tput setaf 2; printf '\x02')
__YELLOW=$(printf '\x01'; tput setaf 3; printf '\x02')
__BOLD_YELLOW=$(printf '\x01'; tput bold; tput setaf 3; printf '\x02')
__BLUE=$(printf '\x01'; tput setaf 4; printf '\x02')
__MAGENTA=$(printf '\x01'; tput setaf 5; printf '\x02')
__CYAN=$(printf '\x01'; tput setaf 6; printf '\x02')

check_previous() { PS1='$( { test $? -ne 0 && printf "%s" "$__RED" || printf "%s" "$__CYAN"; } )'; }
add_pid() { PS1+="$(printf "%05d" "$$" )"; }
add_prompt_char() { PS1+='\$ '; }
insert_text() { test -n "$*" && PS1+=$(printf '\\\n%s' "$*"); }

set_prompt() {
	check_previous
	insert_text '\D{%T%z}'  # Text in {} is passed to strftime for time
	insert_text '${PS1_PREFIX+${__YELLOW}[$PS1_PREFIX]}'
	test -z "$TMUX" && insert_text "${__RED}|NO_TMUX|"
	tput cols > /dev/null
	local width=$(tput cols)

	if test "$width" -le 80; then
		insert_text \|
	else
		insert_text '$__MAGENTA'

		test -n "$PROJECT" && insert_text "(${PROJECT%-[0-9]*})"

		# directory and git branch
		if test "$width" -gt 100; then
		insert_text '[\W'
		insert_text '$(
			printf "%s]" \
				"$( git rev-parse --abbrev-ref HEAD 2> /dev/null \
					| sed -E -e "s/^/@/" -e "s@^:heads/@:@" )" \
			| tr \  .
		)'
		else
			insert_text :
		fi
	fi
	insert_text "$__GREEN"
	add_pid
	add_prompt_char
	insert_text "$__BOLD_YELLOW"
}
set_prompt
unset set_prompt
unset set_color
unset add_pid
unset add_prompt_char
unset insert_text
